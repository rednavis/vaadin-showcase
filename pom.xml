<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <artifactId>vaadin-showcase</artifactId>
  <groupId>com.rednavis.vaadin.showcase</groupId>
  <modelVersion>4.0.0</modelVersion>
  <name>Vaadin Showcase</name>
  <packaging>war</packaging>
  <version>1.0-SNAPSHOT</version>

  <build>
    <defaultGoal>package tomee:run</defaultGoal>
    <plugins>
      <plugin>
        <artifactId>tomee-maven-plugin</artifactId>
        <configuration>
          <context>ROOT</context>
          <reloadOnUpdate>true</reloadOnUpdate>
          <synchronization>
            <extensions>
              <extension>.class</extension>
            </extensions>
          </synchronization>
          <systemVariables>
            <openejb.system.apps>true</openejb.system.apps>
            <tomee.serialization.class.blacklist>-</tomee.serialization.class.blacklist>
          </systemVariables>
          <tomeeClassifier>webprofile</tomeeClassifier>
        </configuration>
        <groupId>org.apache.tomee.maven</groupId>
        <version>${tomee-maven-plugin.version}</version>
      </plugin>

      <plugin>
        <artifactId>frontend-maven-plugin</artifactId>
        <configuration>
          <nodeVersion>v13.6.0</nodeVersion>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>install-node-and-npm</goal>
            </goals>
            <id>install node and npm</id>
            <phase>generate-resources</phase>
          </execution>
        </executions>
        <groupId>com.github.eirslett</groupId>
        <version>${frontend-maven-plugin.version}</version>
      </plugin>

      <!--
          Take care of synchronizing java dependencies and imports in
          package.json and main.js files.
          It also creates webpack.config.js if not exists yet.
      -->
      <plugin>
        <artifactId>vaadin-maven-plugin</artifactId>
        <executions>
          <execution>
            <goals>
              <goal>prepare-frontend</goal>
            </goals>
          </execution>
        </executions>
        <groupId>com.vaadin</groupId>
        <version>${vaadin.version}</version>
      </plugin>

      <plugin>
        <artifactId>thorntail-maven-plugin</artifactId>
        <configuration>
          <properties>
            <!-- Enable for local debug on MacOS -->
            <!-- <java.net.preferIPv4Stack>true</java.net.preferIPv4Stack> -->
          </properties>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>package</goal>
            </goals>
          </execution>
        </executions>
        <groupId>io.thorntail</groupId>
        <version>${thorntail-maven-plugin.version}</version>
      </plugin>

      <!-- Test coverage settings -->
      <plugin>
        <artifactId>cobertura-maven-plugin</artifactId>
        <configuration>
          <check/>
          <formats>
            <format>html</format>
            <format>xml</format>
          </formats>
          <instrumentation>
            <excludes>
              <exclude>com/rednavis/vaadin/showcase/views/**/*.class</exclude>
            </excludes>
            <ignoreTrivial>true</ignoreTrivial>
          </instrumentation>
          <quiet>true</quiet>
        </configuration>
        <groupId>org.codehaus.mojo</groupId>
        <version>${cobertura-maven-plugin.version}</version>
      </plugin>

      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
        <groupId>org.apache.maven.plugins</groupId>
        <version>${maven-surefire-plugin.version}</version>
      </plugin>

      <plugin>
        <artifactId>maven-failsafe-plugin</artifactId>
        <groupId>org.apache.maven.plugins</groupId>
        <version>${maven-failsafe-plugin.version}</version>
      </plugin>
    </plugins>
  </build>

  <dependencies>
    <dependency>
      <artifactId>vaadin</artifactId>
      <!-- Replace artifactId with vaadin-core to use only free components -->
      <exclusions>
        <!-- Webjars are only needed when running in Vaadin 13 compatibility mode -->
        <exclusion>
          <artifactId>*</artifactId>
          <groupId>com.vaadin.webjar</groupId>
        </exclusion>
        <exclusion>
          <artifactId>*</artifactId>
          <groupId>org.webjars.bowergithub.insites</groupId>
        </exclusion>
        <exclusion>
          <artifactId>*</artifactId>
          <groupId>org.webjars.bowergithub.polymer</groupId>
        </exclusion>
        <exclusion>
          <artifactId>*</artifactId>
          <groupId>org.webjars.bowergithub.polymerelements</groupId>
        </exclusion>
        <exclusion>
          <artifactId>*</artifactId>
          <groupId>org.webjars.bowergithub.vaadin</groupId>
        </exclusion>
        <exclusion>
          <artifactId>*</artifactId>
          <groupId>org.webjars.bowergithub.webcomponents</groupId>
        </exclusion>
      </exclusions>
      <groupId>com.vaadin</groupId>
    </dependency>

    <dependency>
      <artifactId>vaadin-cdi</artifactId>
      <groupId>com.vaadin</groupId>
    </dependency>

    <dependency>
      <artifactId>slf4j-simple</artifactId>
      <groupId>org.slf4j</groupId>
    </dependency>

    <!-- Java EE-->
    <dependency>
      <artifactId>javaee-api</artifactId>
      <groupId>javax</groupId>
      <scope>provided</scope>
      <version>${javaee-api.version}</version>
    </dependency>

    <!-- Database -->
    <dependency>
      <artifactId>postgresql</artifactId>
      <groupId>org.postgresql</groupId>
      <version>${postgresql.version}</version>
    </dependency>

    <!-- Lombok -->
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <version>${lombok.version}</version>
      <scope>provided</scope>
    </dependency>

    <!-- Other-->
    <!-- VT Password is a Java library for verifying that a password meets a define ruleset-->
    <!-- https://github.com/dfish3r/vt-password-->
    <dependency>
      <artifactId>vt-password</artifactId>
      <groupId>edu.vt.middleware</groupId>
      <version>${vt-password.version}</version>
    </dependency>

    <!-- The OWNER API is a Java library with the goal of minimizing the code required to handle
    application configuration via Java properties files-->
    <!-- https://github.com/lviggiano/owner-->
    <dependency>
      <artifactId>owner</artifactId>
      <groupId>org.aeonbits.owner</groupId>
      <version>${owner.version}</version>
    </dependency>

    <!-- Mockneat Build Status codecov is an arbitrary data-generator open-source library written in Java.-->
    <!-- It provides a simple but powerful (fluent) API that enables developers to create json, xml, csv and sql data programatically.-->
    <!-- https://github.com/nomemory/mockneat-->
    <dependency>
      <artifactId>mockneat</artifactId>
      <groupId>net.andreinc.mockneat</groupId>
      <version>${mockneat.version}</version>
    </dependency>

    <!-- Test -->
    <dependency>
      <artifactId>junit-jupiter</artifactId>
      <groupId>org.junit.jupiter</groupId>
      <version>${junit-jupiter.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <artifactId>mockito-junit-jupiter</artifactId>
      <groupId>org.mockito</groupId>
      <scope>test</scope>
      <version>${mockito-junit-jupiter.version}</version>
    </dependency>

    <!-- The primary goal of this project is to provide simple and fast tools for CDI unit/component testing.
    The tools are implemented as JUnit 4 and JUnit 5 extensions. Supports 3.0 (CDI 2.0)-->
    <!-- https://github.com/weld/weld-junit-->
    <dependency>
      <artifactId>weld-junit5</artifactId>
      <groupId>org.jboss.weld</groupId>
      <version>${weld-junit5.version}</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <artifactId>vaadin-bom</artifactId>
        <groupId>com.vaadin</groupId>
        <scope>import</scope>
        <type>pom</type>
        <version>${vaadin.version}</version>
      </dependency>
    </dependencies>
  </dependencyManagement>
  <pluginRepositories>
    <pluginRepository>
      <id>central</id>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
      <url>https://repo1.maven.org/maven2/</url>
    </pluginRepository>
  </pluginRepositories>

  <profiles>
    <profile>
      <!-- Production mode is activated using -Pproduction -->
      <build>
        <plugins>
          <plugin>
            <groupId>com.vaadin</groupId>
            <artifactId>vaadin-maven-plugin</artifactId>
            <executions>
              <execution>
                <goals>
                  <goal>build-frontend</goal>
                </goals>
                <phase>compile</phase>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
      <dependencies>
        <dependency>
          <artifactId>flow-server-production-mode</artifactId>
          <groupId>com.vaadin</groupId>
        </dependency>
      </dependencies>

      <id>production</id>

      <properties>
        <vaadin.productionMode>true</vaadin.productionMode>
      </properties>
    </profile>

    <profile>
      <build>
        <plugins>
          <plugin>
            <artifactId>tomee-maven-plugin</artifactId>
            <configuration>
              <simpleLog>true</simpleLog>
            </configuration>
            <executions>
              <execution>
                <configuration>
                  <checkStarted>true</checkStarted>
                </configuration>
                <goals>
                  <goal>start</goal>
                </goals>
                <id>start</id>
                <phase>pre-integration-test</phase>
              </execution>
              <execution>
                <goals>
                  <goal>stop</goal>
                </goals>
                <id>stop</id>
                <phase>post-integration-test</phase>
              </execution>
            </executions>
            <groupId>org.apache.tomee.maven</groupId>
          </plugin>

          <plugin>
            <configuration>
              <systemPropertyVariables>
                <enableAssertions>true</enableAssertions>
                <trimStackTrace>false</trimStackTrace>
                <webdriver.chrome.driver>${webdriver.chrome.driver}</webdriver.chrome.driver>
              </systemPropertyVariables>
            </configuration>
            <artifactId>maven-failsafe-plugin</artifactId>
            <groupId>org.apache.maven.plugins</groupId>
            <executions>
              <execution>
                <goals>
                  <goal>integration-test</goal>
                  <goal>verify</goal>
                </goals>
              </execution>
            </executions>
            <version>${maven-failsafe-plugin.version}</version>
          </plugin>

          <plugin>
            <configuration>
              <customRepositoryMap>${project.basedir}/drivers.xml</customRepositoryMap>
              <downloadedZipFileDirectory>${drivers.dir}/driver_zips</downloadedZipFileDirectory>
              <onlyGetDriversForHostOperatingSystem>true</onlyGetDriversForHostOperatingSystem>
              <rootStandaloneServerDirectory>${drivers.dir}/driver</rootStandaloneServerDirectory>
            </configuration>
            <artifactId>driver-binary-downloader-maven-plugin</artifactId>
            <executions>
              <execution>
                <phase>${drivers.downloader.phase}</phase>
                <goals>
                  <goal>selenium</goal>
                </goals>
              </execution>
            </executions>
            <groupId>com.lazerycode.selenium</groupId>
            <version>${driver-binary-downloader-maven-plugin.version}</version>
          </plugin>
        </plugins>
      </build>
      <id>integration-tests</id>
    </profile>
  </profiles>

  <properties>
    <!-- Common-->
    <drivers.dir>${project.basedir}/drivers</drivers.dir>
    <drivers.downloader.phase>pre-integration-test</drivers.downloader.phase>
    <failOnMissingWebXml>false</failOnMissingWebXml>
    <cobertura-maven-plugin.version>2.7</cobertura-maven-plugin.version>
    <driver-binary-downloader-maven-plugin.version>1.0.17</driver-binary-downloader-maven-plugin.version>
    <frontend-maven-plugin.version>1.9.0</frontend-maven-plugin.version>
    <junit-jupiter.version>5.6.0</junit-jupiter.version>

    <!-- Plugins-->
    <maven-failsafe-plugin.version>2.22.2</maven-failsafe-plugin.version>
    <maven-surefire-plugin.version>2.22.2</maven-surefire-plugin.version>
    <thorntail-maven-plugin.version>2.6.0.Final</thorntail-maven-plugin.version>
    <maven-checkstyle-plugin.version>3.1.0</maven-checkstyle-plugin.version>
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
    <mockito-junit-jupiter.version>3.2.4</mockito-junit-jupiter.version>

    <!-- Reporting-->
    <mockneat.version>0.3.8</mockneat.version>

    <!-- Dependencies -->
    <postgresql.version>42.2.9</postgresql.version>
    <javaee-api.version>7.0</javaee-api.version>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <lombok.version>1.18.10</lombok.version>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <owner.version>1.0.10</owner.version>
    <tomee-maven-plugin.version>7.1.2</tomee-maven-plugin.version>

    <!-- Test-->
    <vaadin.version>14.1.16</vaadin.version>
    <vt-password.version>3.1.2</vt-password.version>
    <weld-junit5.version>1.3.1.Final</weld-junit5.version>
  </properties>

  <reporting>
    <plugins>
      <plugin>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <configuration>
          <configLocation>${project.basedir}/config/checkstyle/checkstyle.xml</configLocation>
          <suppressionsFileExpression>checkstyle.suppressions.file</suppressionsFileExpression>
          <suppressionsLocation>${project.basedir}/config/checkstyle/suppressions.xml</suppressionsLocation>
        </configuration>
        <groupId>org.apache.maven.plugins</groupId>
        <reportSets>
          <reportSet>
            <reports>
              <report>checkstyle</report>
            </reports>
          </reportSet>
        </reportSets>
        <version>${maven-checkstyle-plugin.version}</version>
      </plugin>
    </plugins>
  </reporting>

  <repositories>
    <repository>
      <id>central</id>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
      <url>https://repo1.maven.org/maven2/</url>
    </repository>
    <!-- Repository used by many Vaadin add-ons -->
    <repository>
      <id>Vaadin Directory</id>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
      <url>https://maven.vaadin.com/vaadin-addons</url>
    </repository>
    <repository>
      <id>jcenter</id>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
      <url>https://jcenter.bintray.com/</url>
    </repository>
  </repositories>
</project>